version: '3.8'

networks:
  web-app:

services:
  # +----------------------+ #
  # | Container: NginX     | #
  # +----------------------+ #
  webserver:
    networks:
      - web-app
    container_name: nginx
    build:
      context: .
      dockerfile: containers/nginx/Dockerfile
    image: nginx:nginx-stable-alpine
    ports:
      - "8080:80"
    volumes:
      - "${PATH_CONFIGS_NGINX}:/etc/nginx/conf.d/default.conf"
      - "${PATH_PROJECT_SOURCE}:/var/www/html"
    depends_on:
      - php
      - database

  # +----------------------+ #
  # | Container: PHP       | #
  # +----------------------+ #
  php:
    networks:
      - web-app
    container_name: php
    build:
      context: .
      dockerfile: containers/php/Dockerfile
    image: php:php-8.2-fpm-alpine
    ports:
      - "9000:9000"
    volumes:
      - "${PATH_PROJECT_SOURCE}:/var/www/html"

  # +----------------------+ #
  # | Container: MySQL     | #
  # +----------------------+ #
  database:
    networks:
      - web-app
    container_name: mysql
    build:
      context: .
      dockerfile: containers/mysql/Dockerfile
    image: mysql:mysql-${DB_VERSION}
#    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    env_file:
      - ${PATH_ENVIRONMENTS}/${SYS_ENV}.env
    volumes:
      - "${DB_VOLUME}:/var/lib/mysql"
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
# ---- Database Credentials ----
#      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: "${DB_USERNAME}"
#      MYSQL_PASSWORD: "${DB_PASSWORD}"
#      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD_ROOT}"

  # +----------------------+ #
  # | Container: Composer  | #
  # +----------------------+ #
  composer:
    networks:
      - web-app
    container_name: composer
    build:
      context: .
      dockerfile: containers/composer/Dockerfile
    image: composer:composer-2.6.1
    working_dir: /var/www/html
    volumes:
      - "${PATH_PROJECT_SOURCE}:/var/www/html"
    depends_on:
      - php
    entrypoint: ['composer']

  # +----------------------+ #
  # | Container: NPM       | #
  # +----------------------+ #
  npm:
    networks:
      - web-app
    container_name: npm
    image: node:20.6-alpine
    working_dir: /var/www/html
    volumes:
      - "${PATH_PROJECT_SOURCE}:/var/www/html"
    entrypoint: ['npm']

  # +----------------------+ #
  # | Container: Artisan   | #
  # +----------------------+ #
  artisan:
    networks:
      - web-app
    container_name: artisan
    build:
      context: .
      dockerfile: containers/php/Dockerfile
    image: artisan:laravel-9
    links:
      - php
      - database
    env_file:
      - ${PATH_ENVIRONMENTS}/${SYS_ENV}.env
    working_dir: /var/www/html
    volumes:
      - "${PATH_PROJECT_SOURCE}:/var/www/html"
    depends_on:
      - php
      - database
    entrypoint: ['php', '/var/www/html/artisan']
